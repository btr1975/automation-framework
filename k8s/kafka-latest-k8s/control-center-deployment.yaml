apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-kafka-latest.yml
      -o ./kafka-latest-k8s/
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: control-center
  name: control-center
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: control-center
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose-kafka-latest.yml
          -o ./kafka-latest-k8s/
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: control-center
    spec:
      containers:
      - env:
        - name: CONFLUENT_METRICS_TOPIC_REPLICATION
          value: "1"
        - name: CONTROL_CENTER_BOOTSTRAP_SERVERS
          value: broker-1:9092,broker-2:9093,broker-3:9094
        - name: CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS
          value: "1"
        - name: CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS
          value: "1"
        - name: CONTROL_CENTER_REPLICATION_FACTOR
          value: "1"
        - name: CONTROL_CENTER_SCHEMA_REGISTRY_URL
          value: http://schema-registry:8081
        - name: CONTROL_CENTER_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: PORT
          value: "9021"
        image: confluentinc/cp-enterprise-control-center:latest
        imagePullPolicy: ""
        name: control-center
        ports:
        - containerPort: 9021
        resources: {}
      hostname: control-center
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
