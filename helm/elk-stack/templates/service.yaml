---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}-service"
  {{- if .Release.Namespace | ne "default" }}
  namespace: {{ .Release.Namespace | quote }}
  {{- else if .Values.namespace | ne "default" }}
  namespace: {{ .Values.namespace | quote }}
  {{- end }}
spec:
  type: {{ .Values.service.type | quote}}
  ports:
  - port: {{ .Values.service.kibana.port }}             # Port apps in cluster use
    targetPort: {{ .Values.service.kibana.port }}       # Port to connect to container
    nodePort: {{ .Values.service.kibana.nodePort }}     # Port to expose on the nodes
    protocol: "TCP"
    name: {{ .Values.service.kibana.name | quote}}
  - port: {{ .Values.service.elasticsearch.port }}              # Port apps in cluster use
    targetPort: {{ .Values.service.elasticsearch.port }}        # Port to connect to container
    nodePort: {{ .Values.service.elasticsearch.nodePort }}      # Port to expose on the nodes
    protocol: "TCP"
    name: {{ .Values.service.elasticsearch.name | quote}}
  - port: {{ .Values.service.logstash.port }}              # Port apps in cluster use
    targetPort: {{ .Values.service.logstash.port }}        # Port to connect to container
    nodePort: {{ .Values.service.logstash.nodePort }}      # Port to expose on the nodes
    protocol: "TCP"
    name: {{ .Values.service.logstash.name | quote}}
  selector:
    app: "{{ .Release.Name }}-{{ .Chart.Name }}"
